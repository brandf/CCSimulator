
export enum KeyAction {
    None = '<None>',

    // Start with just a few non-ASCII actions
    Shift = '<Shift>',
    Enter = '<Enter>',

    // ASCII
    Space = ' ',
    Exclamation = '!',
    DoubleQuote = '"',
    Hash = '#',
    Dollar = '$',
    Percent = '%',
    Ampersand = '&',
    SingleQuote = "'",
    LeftParen = '(',
    RightParen = ')',
    Asterisk = '*',
    Plus = '+',
    Comma = ',',
    Minus = '-',
    Period = '.',
    Slash = '/',
    Zero = '0',
    One = '1',
    Two = '2',
    Three = '3',
    Four = '4',
    Five = '5',
    Six = '6',
    Seven = '7',
    Eight = '8',
    Nine = '9',
    Colon = ':',
    Semicolon = ';',
    LessThan = '<',
    Equals = '=',
    GreaterThan = '>',
    Question = '?',
    At = '@',
    LeftBracket = '[',
    Backslash = '\\',
    RightBracket = ']',
    Caret = '^',
    Underscore = '_',
    GraveAccent = '`',
    a = 'a',
    b = 'b',
    c = 'c',
    d = 'd',
    e = 'e',
    f = 'f',
    g = 'g',
    h = 'h',
    i = 'i',
    j = 'j',
    k = 'k',
    l = 'l',
    m = 'm',
    n = 'n',
    o = 'o',
    p = 'p',
    q = 'q',
    r = 'r',
    s = 's',
    t = 't',
    u = 'u',
    v = 'v',
    w = 'w',
    x = 'x',
    y = 'y',
    z = 'z',
    LeftBrace = '{',
    Pipe = '|',
    RightBrace = '}',
    Tilde = '~',
}
const actionFromString: Record<string, KeyAction> = Object.values(KeyAction).reduce((map, value) => {
    map[value] = value;
    return map;
}, {} as Record<string, KeyAction>);

const actionFromCode : KeyAction[] = [
    // TODO not complete list yet
    KeyAction.None,
    KeyAction.Shift,
    KeyAction.Enter,
    KeyAction.Space,
    KeyAction.Exclamation,
    KeyAction.DoubleQuote,
    KeyAction.Hash,
    KeyAction.Dollar,
    KeyAction.Percent,
    KeyAction.Ampersand,
    KeyAction.SingleQuote,
    KeyAction.LeftParen,
    KeyAction.RightParen,
    KeyAction.Asterisk,
    KeyAction.Plus,
    KeyAction.Comma,
    KeyAction.Minus,
    KeyAction.Period,
    KeyAction.Slash,
    KeyAction.Zero,
    KeyAction.One,
    KeyAction.Two,
    KeyAction.Three,
    KeyAction.Four,
    KeyAction.Five,
    KeyAction.Six,
    KeyAction.Seven,
    KeyAction.Eight,
    KeyAction.Nine,
    KeyAction.Colon,
    KeyAction.Semicolon,
    KeyAction.LessThan,
    KeyAction.Equals,
    KeyAction.GreaterThan,
    KeyAction.Question,
    KeyAction.At,
    KeyAction.LeftBracket,
    KeyAction.Backslash,
    KeyAction.RightBracket,
    KeyAction.Caret,
    KeyAction.Underscore,
    KeyAction.GraveAccent,
    KeyAction.a,
    KeyAction.b,
    KeyAction.c,
    KeyAction.d,
    KeyAction.e,
    KeyAction.f,
    KeyAction.g,
    KeyAction.h,
    KeyAction.i,
    KeyAction.j,
    KeyAction.k,
    KeyAction.l,
    KeyAction.m,
    KeyAction.n,
    KeyAction.o,
    KeyAction.p,
    KeyAction.q,
    KeyAction.r,
    KeyAction.s,
    KeyAction.t,
    KeyAction.u,
    KeyAction.v,
    KeyAction.w,
    KeyAction.x,
    KeyAction.y,
    KeyAction.z,
    KeyAction.LeftBrace,
    KeyAction.Pipe,
    KeyAction.RightBrace,
    KeyAction.Tilde,
];

export function keyActionFromCode(actionCode: number): KeyAction {
    if (actionCode < 0 || actionCode >= actionFromCode.length) {
        return KeyAction.None;
    }
    return actionFromCode[actionCode];
}

export function keyActionToCode(action: KeyAction): number {
    return actionFromCode.indexOf(action);
}

export function keyActionFromChar(char: string): KeyAction | undefined {
    if (char.length != 1) return undefined;
    return actionFromString[char];
}